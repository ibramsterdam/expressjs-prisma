generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
//
// }

model User {
  id                 Int                     @id @default(autoincrement())
  createdAt          DateTime                @default(now())
  updatedAt          DateTime                @updatedAt
  email              String                  @unique
  hash               String
  firstName          String?
  lastName           String?
  zip                String?
  city               String?
  state              String?
  profilePicture     String?
  datapods_with_role UserOnDatapodwithRole[]
}

model Role {
  name                       String                  @id
  description                String
  users_on_datapod_with_role UserOnDatapodwithRole[]
}

model Datapod {
  id                         Int                     @id @default(autoincrement())
  created_at                 DateTime                @default(now())
  updated_at                 DateTime                @updatedAt
  title                      String
  description                String
  users_on_datapod_with_role UserOnDatapodwithRole[]
  items                      Item[]
}

model UserOnDatapodwithRole {
  userId Int
  user   User @relation(fields: [userId], references: [id])

  datapodId Int
  datapod   Datapod @relation(fields: [datapodId], references: [id])

  role_name String
  role      Role   @relation(fields: [role_name], references: [name])

  roleExpireDate DateTime?

  @@id([userId, datapodId])
}

model Item {
  id             Int      @id @default(autoincrement())
  filename       String
  mimetype       String
  storageService String
  fileId         String
  fileUrl        String
  datapodId      Int
  createdAt      DateTime @default(now())
  datapod        Datapod  @relation(fields: [datapodId], references: [id])
}
